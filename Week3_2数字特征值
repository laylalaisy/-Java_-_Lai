2
数字特征值（5分）
题目内容：
对数字求特征值是常用的编码算法，奇偶特征是一种简单的特征值。对于一个整数，从个位开始对每一位数字编号，个位是1号，十位是2号，以此类推。这个整数在第n位上的数字记作x，如果x和n的奇偶性相同，则记下一个1，否则记下一个0。按照整数的顺序把对应位的表示奇偶性的0和1都记录下来，就形成了一个二进制数字。比如，对于342315，这个二进制数字就是001101。

按照二进制位值将1的位的位值加起来就得到了结果13。

你的程序要读入一个非负整数，整数的范围是[0,100000]，然后按照上述算法计算出表示奇偶性的那个二进制数字，输出它对应的十进制值。

提示：将整数从右向左分解，数位每次加1，而二进制值每次乘2。

输入格式:
一个非负整数，整数的范围是[0,100000]。

输出格式：
一个整数，表示计算结果。

输入样例：
342315

输出样例：
13
时间限制：500ms内存限制：32000kb


注意事项！：
在本次实验中需要提取一个整数的每一位数字。
首先想到了比较蠢的办法，相除或者取余的方法来获得每一位数字，同时不要忘记掉统计一下总位数，目的是判断每个数字所在的位置；
然后我觉得这个方法虽然可以实现，但是一定有更加方便的方法，不然Java和C就没有差别了嘛~
于是...偷懒百度了一下（百度真的...还是用谷歌吧）

int a = 1574444;
String aS = String.valueOf(a);
char[] asC = aS.toCharArray();
for(int i=0;i<asC.length;i++)
{
        System.out.println(asC[i]);
 }
 
 好的，这个方法很好！
 再对本题优化了一下就是一开始输入的时候直接采用了String的输入，完成。
 值得注意的是，toCharArray函数是从高位到低位的，也就是说Array[0]实际上是整数的最高位数字。
